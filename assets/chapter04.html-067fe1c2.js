const e=JSON.parse(`{"key":"v-6da972ea","path":"/en/notes/frontend/js/bosn/chapter04.html","title":"第 4 章 对象概述","lang":"en-US","frontmatter":{"order":4,"category":["notes","frontend"],"tag":["js","javascript"],"description":"第 4 章 对象概述 4 - 1 对象概述 概述 对象中包含一系列属性，这些属性是无序的。 每个属性都有一个字符串 key和对应的 value。 var obj = {} obj[1] = 1 obj['1'] = 2 obj // Object {1: 2} // 上面可以看错，不管是数字型的1作为属性，还是字符串型的'1'作为属性，他们指向同一个属性。 obj[{}] = false obj[{ x: 1 }] = true obj // Object {1:2, [object Object]: true} // 同样，这里不管是空对象，还是属性x为1的对象作为key，都是把它们toString()之后作为key，他们最终指向同一个属性。","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/en/notes/frontend/js/bosn/chapter04.html"}],["meta",{"property":"og:site_name","content":"GreatWall’s blog"}],["meta",{"property":"og:title","content":"第 4 章 对象概述"}],["meta",{"property":"og:description","content":"第 4 章 对象概述 4 - 1 对象概述 概述 对象中包含一系列属性，这些属性是无序的。 每个属性都有一个字符串 key和对应的 value。 var obj = {} obj[1] = 1 obj['1'] = 2 obj // Object {1: 2} // 上面可以看错，不管是数字型的1作为属性，还是字符串型的'1'作为属性，他们指向同一个属性。 obj[{}] = false obj[{ x: 1 }] = true obj // Object {1:2, [object Object]: true} // 同样，这里不管是空对象，还是属性x为1的对象作为key，都是把它们toString()之后作为key，他们最终指向同一个属性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.zhaobc.site/"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-12-08T07:42:20.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"第 4 章 对象概述"}],["meta",{"property":"article:author","content":"Great Wall"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-12-08T07:42:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第 4 章 对象概述\\",\\"image\\":[\\"https://www.zhaobc.site/\\"],\\"dateModified\\":\\"2023-12-08T07:42:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Great Wall\\",\\"url\\":\\"http://localhost:8080\\"}]}"]]},"headers":[{"level":2,"title":"4 - 1 对象概述","slug":"_4-1-对象概述","link":"#_4-1-对象概述","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"对象结构","slug":"对象结构","link":"#对象结构","children":[]}]},{"level":2,"title":"4 - 2 创建对象、原型链","slug":"_4-2-创建对象、原型链","link":"#_4-2-创建对象、原型链","children":[{"level":3,"title":"对象创建-字面量","slug":"对象创建-字面量","link":"#对象创建-字面量","children":[]},{"level":3,"title":"对象创建-new/原型链","slug":"对象创建-new-原型链","link":"#对象创建-new-原型链","children":[]},{"level":3,"title":"对象创建-Object.create","slug":"对象创建-object-create","link":"#对象创建-object-create","children":[]}]},{"level":2,"title":"4 - 3 属性操作","slug":"_4-3-属性操作","link":"#_4-3-属性操作","children":[{"level":3,"title":"属性读写","slug":"属性读写","link":"#属性读写","children":[]},{"level":3,"title":"属性读写-异常","slug":"属性读写-异常","link":"#属性读写-异常","children":[]},{"level":3,"title":"属性删除","slug":"属性删除","link":"#属性删除","children":[]},{"level":3,"title":"属性检测","slug":"属性检测","link":"#属性检测","children":[]},{"level":3,"title":"属性枚举","slug":"属性枚举","link":"#属性枚举","children":[]}]},{"level":2,"title":"4-4 get/set 方法","slug":"_4-4-get-set-方法","link":"#_4-4-get-set-方法","children":[{"level":3,"title":"getter/setter 使用","slug":"getter-setter-使用","link":"#getter-setter-使用","children":[]},{"level":3,"title":"get/set 与原型链","slug":"get-set-与原型链","link":"#get-set-与原型链","children":[]}]},{"level":2,"title":"4 - 5 属性标签","slug":"_4-5-属性标签","link":"#_4-5-属性标签","children":[{"level":3,"title":"查看属性标签","slug":"查看属性标签","link":"#查看属性标签","children":[]}]},{"level":2,"title":"4 - 6 对象标签，对象序列化","slug":"_4-6-对象标签-对象序列化","link":"#_4-6-对象标签-对象序列化","children":[{"level":3,"title":"对象标签","slug":"对象标签","link":"#对象标签","children":[]},{"level":3,"title":"原型标签proto","slug":"原型标签proto","link":"#原型标签proto","children":[]},{"level":3,"title":"class 标签","slug":"class-标签","link":"#class-标签","children":[]},{"level":3,"title":"extensible 标签","slug":"extensible-标签","link":"#extensible-标签","children":[]}]}],"git":{"createdTime":1702021340000,"updatedTime":1702021340000,"contributors":[{"name":"hengchangcheng","email":"13228235591@qq.com","commits":1}]},"readingTime":{"minutes":9,"words":2701},"filePathRelative":"en/notes/frontend/js/bosn/chapter04.md","localizedDate":"December 8, 2023","excerpt":"<h1> 第 4 章 对象概述</h1>\\n<h2> 4 - 1 对象概述</h2>\\n<h3> 概述</h3>\\n<p>对象中包含一系列属性，这些属性是<strong>无序</strong>的。<br>\\n每个属性都有一个<strong>字符串 key</strong>和对应的 value。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\nobj<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span>\\nobj<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">'1'</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span>\\nobj <span class=\\"token comment\\">// Object {1: 2}</span>\\n<span class=\\"token comment\\">// 上面可以看错，不管是数字型的1作为属性，还是字符串型的'1'作为属性，他们指向同一个属性。</span>\\n\\nobj<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span>\\nobj<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">x</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span>\\nobj <span class=\\"token comment\\">// Object {1:2, [object Object]: true}</span>\\n<span class=\\"token comment\\">// 同样，这里不管是空对象，还是属性x为1的对象作为key，都是把它们toString()之后作为key，他们最终指向同一个属性。</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
